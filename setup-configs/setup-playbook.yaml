---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - git

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce=18.06.2~ce~3-0~ubuntu
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Install python and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - python3 
      - python3-pip

  - name: Install pipenv
    command: pip3 install pipenv

    #- name: pipenv deploy
    #  command: pipenv --python 3 install --system --deploy

  - name: Install pip2 required to execute docker_container
    shell: |
      curl https://bootstrap.pypa.io/get-pip.py --output get-pip.py
      python2 get-pip.py

  - name: Install docker module
    command: pip2 install docker

  - name: Export shell variables
    shell: |
      export S3_URL=http://localhost
      export S3_ACCESS_KEY=AKIAIOSFODNN7
      export S3_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCY

  - name: Create MiniO container
    docker_container: 
      name: minio
      image: minio/minio
      ports: 
      - "9000:9000"
      volumes:
      - "/mnt/data:/data"
      env:
       MINIO_ACCESS_KEY: "AKIAIOSFODNN7"
       MINIO_SECRET_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCY"
      command: server /data

  handlers:
  - name: docker status
    service: name=docker state=started
